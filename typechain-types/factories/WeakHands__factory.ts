/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { WeakHands, WeakHandsInterface } from "../WeakHands";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newTotal",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetPrice",
        type: "uint256",
      },
    ],
    name: "ParametersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getLockInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetPrice",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "parametersSet",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "withdrawn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "locks",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetPrice",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "parametersSet",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "withdrawn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_targetDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_targetPriceUSD",
        type: "uint256",
      },
    ],
    name: "setParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001516380380620015168339818101604052810190620000379190620000dc565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b620000b68162000097565b8114620000c257600080fd5b50565b600081519050620000d681620000ab565b92915050565b600060208284031215620000f557620000f462000072565b5b60006200010584828501620000c5565b91505092915050565b6080516113ec6200012a600039600061071501526113ec6000f3fe6080604052600436106100705760003560e01c8063884870c71161004e578063884870c71461010e5780638e15f47314610137578063b51459fe14610162578063d0e30db01461018d57610070565b80633ccfd60b146100755780635de9a1371461008c5780637238ccdb146100cd575b600080fd5b34801561008157600080fd5b5061008a610197565b005b34801561009857600080fd5b506100b360048036038101906100ae9190610b69565b61034f565b6040516100c4959493929190610bca565b60405180910390f35b3480156100d957600080fd5b506100f460048036038101906100ef9190610b69565b61039f565b604051610105959493929190610bca565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190610c49565b61042f565b005b34801561014357600080fd5b5061014c610710565b6040516101599190610c89565b60405180910390f35b34801561016e57600080fd5b506101776107f2565b6040516101849190610ca4565b60405180910390f35b610195610949565b005b61019f6107f2565b6101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d590610d1c565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154905060018260030160016101000a81548160ff0219169083151502179055506000826000018190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161027690610d6d565b60006040518083038185875af1925050503d80600081146102b3576040519150601f19603f3d011682016040523d82523d6000602084013e6102b8565b606091505b50509050806102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390610dce565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65836040516103429190610c89565b60405180910390a2505050565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b6000806000806000806000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000154816001015482600201548360030160009054906101000a900460ff168460030160019054906101000a900460ff16955095509550955095505091939590929450565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154116104b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104aa90610e3a565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053990610ea6565b60405180910390fd5b428211610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90610f12565b60405180910390fd5b600081116105c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105be90610fa4565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506305f5e1008161061d9190610ff3565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f4e9fa8cc2783dc5703871c45fca03a6832ea7c4cfc3284af88619bbd9ba325b28383604051610704929190611035565b60405180910390a25050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561077e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a291906110eb565b505050915050600081136107eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e2906111b2565b60405180910390fd5b8091505090565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541161087c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087390610e3a565b60405180910390fd5b8060030160009054906101000a900460ff166108cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c49061121e565b60405180910390fd5b8060030160019054906101000a900460ff161561091f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109169061128a565b60405180910390fd5b6000610929610710565b9050816001015442101580610942575081600201548110155b9250505090565b6000341161098c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610983906112f6565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160019054906101000a900460ff1615610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1290611362565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610a6c9190611382565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154604051610afc929190611035565b60405180910390a2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b3682610b0b565b9050919050565b610b4681610b2b565b8114610b5157600080fd5b50565b600081359050610b6381610b3d565b92915050565b600060208284031215610b7f57610b7e610b06565b5b6000610b8d84828501610b54565b91505092915050565b6000819050919050565b610ba981610b96565b82525050565b60008115159050919050565b610bc481610baf565b82525050565b600060a082019050610bdf6000830188610ba0565b610bec6020830187610ba0565b610bf96040830186610ba0565b610c066060830185610bbb565b610c136080830184610bbb565b9695505050505050565b610c2681610b96565b8114610c3157600080fd5b50565b600081359050610c4381610c1d565b92915050565b60008060408385031215610c6057610c5f610b06565b5b6000610c6e85828601610c34565b9250506020610c7f85828601610c34565b9150509250929050565b6000602082019050610c9e6000830184610ba0565b92915050565b6000602082019050610cb96000830184610bbb565b92915050565b600082825260208201905092915050565b7f43616e6e6f742077697468647261772079657400000000000000000000000000600082015250565b6000610d06601383610cbf565b9150610d1182610cd0565b602082019050919050565b60006020820190508181036000830152610d3581610cf9565b9050919050565b600081905092915050565b50565b6000610d57600083610d3c565b9150610d6282610d47565b600082019050919050565b6000610d7882610d4a565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610db8600f83610cbf565b9150610dc382610d82565b602082019050919050565b60006020820190508181036000830152610de781610dab565b9050919050565b7f4e6f206465706f73697420666f756e6400000000000000000000000000000000600082015250565b6000610e24601083610cbf565b9150610e2f82610dee565b602082019050919050565b60006020820190508181036000830152610e5381610e17565b9050919050565b7f506172616d657465727320616c72656164792073657400000000000000000000600082015250565b6000610e90601683610cbf565b9150610e9b82610e5a565b602082019050919050565b60006020820190508181036000830152610ebf81610e83565b9050919050565b7f5461726765742064617465206d75737420626520696e20667574757265000000600082015250565b6000610efc601d83610cbf565b9150610f0782610ec6565b602082019050919050565b60006020820190508181036000830152610f2b81610eef565b9050919050565b7f546172676574207072696365206d75737420626520677265617465722074686160008201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b6000610f8e602383610cbf565b9150610f9982610f32565b604082019050919050565b60006020820190508181036000830152610fbd81610f81565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ffe82610b96565b915061100983610b96565b925082820261101781610b96565b9150828204841483151761102e5761102d610fc4565b5b5092915050565b600060408201905061104a6000830185610ba0565b6110576020830184610ba0565b9392505050565b600069ffffffffffffffffffff82169050919050565b61107d8161105e565b811461108857600080fd5b50565b60008151905061109a81611074565b92915050565b6000819050919050565b6110b3816110a0565b81146110be57600080fd5b50565b6000815190506110d0816110aa565b92915050565b6000815190506110e581610c1d565b92915050565b600080600080600060a0868803121561110757611106610b06565b5b60006111158882890161108b565b9550506020611126888289016110c1565b9450506040611137888289016110d6565b9350506060611148888289016110d6565b92505060806111598882890161108b565b9150509295509295909350565b7f496e76616c696420707269636500000000000000000000000000000000000000600082015250565b600061119c600d83610cbf565b91506111a782611166565b602082019050919050565b600060208201905081810360008301526111cb8161118f565b9050919050565b7f506172616d6574657273206e6f74207365740000000000000000000000000000600082015250565b6000611208601283610cbf565b9150611213826111d2565b602082019050919050565b60006020820190508181036000830152611237816111fb565b9050919050565b7f416c72656164792077697468647261776e000000000000000000000000000000600082015250565b6000611274601183610cbf565b915061127f8261123e565b602082019050919050565b600060208201905081810360008301526112a381611267565b9050919050565b7f4d757374206465706f7369742045544800000000000000000000000000000000600082015250565b60006112e0601083610cbf565b91506112eb826112aa565b602082019050919050565b6000602082019050818103600083015261130f816112d3565b9050919050565b7f50726576696f7573206c6f636b207761732077697468647261776e0000000000600082015250565b600061134c601b83610cbf565b915061135782611316565b602082019050919050565b6000602082019050818103600083015261137b8161133f565b9050919050565b600061138d82610b96565b915061139883610b96565b92508282019050808211156113b0576113af610fc4565b5b9291505056fea26469706673582212202bd50066944cd17e368a51bff5645324a1baefdfcaa46bfaab043521afb1720a64736f6c63430008140033";

type WeakHandsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WeakHandsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WeakHands__factory extends ContractFactory {
  constructor(...args: WeakHandsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _priceFeed: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_priceFeed, overrides || {});
  }
  override deploy(
    _priceFeed: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_priceFeed, overrides || {}) as Promise<
      WeakHands & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WeakHands__factory {
    return super.connect(runner) as WeakHands__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WeakHandsInterface {
    return new Interface(_abi) as WeakHandsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WeakHands {
    return new Contract(address, _abi, runner) as unknown as WeakHands;
  }
}
